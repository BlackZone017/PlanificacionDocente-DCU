@model dcuFinal.Models.asignacion

@{
    ViewBag.Title = "Create";
}

<div class="container">
    <div>
        @*@Html.ActionLink("Volver a la lista", "Index", null, new { @class = "button" })*@
        <a href="javascript:history.back();" class="button">Volver</a>
        @*@Html.ActionLink("Volver a la lista",null, new { @class = "button",@href= "javascript:history.back();" })*@
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="columns is-centered">
            <div class="column is-half">

                <h4 class="title has-text-centered">Crear Asignacion</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "is-danger" })
                <div class="field">
                    @Html.LabelFor(model => model.Materia_ID, "Materia", htmlAttributes: new { @class = "label" })
                    <div class="control">
                        <div class="select is-fullwidth">
                            @Html.DropDownList("Materia_ID", (IEnumerable<SelectListItem>)ViewBag.materias, htmlAttributes: new { @class = "input" })
                        </div>
                        @Html.ValidationMessageFor(model => model.Materia_ID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="field">
                    @Html.LabelFor(model => model.fecha, "Fecha", htmlAttributes: new { @class = "label" })
                    <div class="control">
                        @Html.EditorFor(model => model.fecha, new { htmlAttributes = new { @class = "input", @type = "date" } })
                        @Html.ValidationMessageFor(model => model.fecha, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="field">
                    @Html.LabelFor(model => model.nombre, "Titulo", htmlAttributes: new { @class = "label" })
                    <div class="control">
                        @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "input" } })
                        @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="field">
                    @Html.LabelFor(model => model.grado, "Grado", htmlAttributes: new { @class = "label" })
                    <div class="control">
                        @Html.EditorFor(model => model.grado, new { htmlAttributes = new { @class = "input" } })
                        @Html.ValidationMessageFor(model => model.grado, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="field">
                    @Html.LabelFor(model => model.año, "Año", htmlAttributes: new { @class = "label" })
                    <div class="control">
                        @Html.EditorFor(model => model.año, new { htmlAttributes = new { @class = "input" } })
                        @Html.ValidationMessageFor(model => model.año, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="field">
                    @Html.LabelFor(model => model.competencia, "Competencias", htmlAttributes: new { @class = "label" })
                    <div class="control">
                        @Html.TextAreaFor(model => model.competencia, new { @class = "textarea has-fixed-size", @rows = 4 })
                        @Html.ValidationMessageFor(model => model.competencia, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="field">
                    @Html.LabelFor(model => model.estrategia, "Estrategia", htmlAttributes: new { @class = "label" })
                    <div class="control">
                        @Html.TextAreaFor(model => model.estrategia, new { @class = "textarea has-fixed-size", @rows = 4 })
                        @Html.ValidationMessageFor(model => model.estrategia, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="field">
                    @Html.LabelFor(model => model.recursos, "Recursos", htmlAttributes: new { @class = "label" })
                    <div class="control">
                        @Html.TextAreaFor(model => model.recursos, new { @class = "textarea has-fixed-size", @rows = 4 })
                        @Html.ValidationMessageFor(model => model.recursos, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="field">
                    @Html.LabelFor(model => model.evaluacion, "Evaluación", htmlAttributes: new { @class = "label" })
                    <div class="control">
                        @Html.EditorFor(model => model.evaluacion, new { htmlAttributes = new { @class = "input" } })
                        @Html.ValidationMessageFor(model => model.evaluacion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="field">
                    <div class="control">
                        <input type="submit" value="Crear" class="button is-primary is-fullwidth" />
                    </div>
                </div>
            </div>
        </div>
    }


</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
