@model dcuFinal.Models.asignacion

@{
    ViewBag.Title = "Edit";
}

<div class="container">
    <section class="section">
        <div class="columns is-centered">
            <div class="column is-one-third">

                <h2 class="title has-text-centered">Editar Asignacion <br><b>@Model.nombre</b></h2>


                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.ID)

                        <div class="field">
                            @Html.LabelFor(model => model.Materia_ID, "Materia", htmlAttributes: new { @class = "label" })
                            <div class="control">
                                @Html.DropDownList("Materia_ID", (IEnumerable<SelectListItem>)ViewBag.materias, htmlAttributes: new { @class = "input" })
                                @Html.ValidationMessageFor(model => model.Materia_ID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="field">
                            @Html.LabelFor(model => model.fecha, "Fecha", htmlAttributes: new { @class = "label" })
                            <div class="control">
                                @Html.EditorFor(model => model.fecha, new { htmlAttributes = new { @class = "input" } })
                                @Html.ValidationMessageFor(model => model.fecha, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="field">
                            @Html.LabelFor(model => model.nombre,"Titulo", htmlAttributes: new { @class = "label" })
                            <div class="control">
                                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "input" } })
                                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="field">
                            @Html.LabelFor(model => model.grado, "Grado", htmlAttributes: new { @class = "label" })
                            <div class="control">
                                @Html.EditorFor(model => model.grado, new { htmlAttributes = new { @class = "input" } })
                                @Html.ValidationMessageFor(model => model.grado, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="field">
                            @Html.LabelFor(model => model.año, "Año", htmlAttributes: new { @class = "label" })
                            <div class="control">
                                @Html.EditorFor(model => model.año, new { htmlAttributes = new { @class = "input" } })
                                @Html.ValidationMessageFor(model => model.año, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="field">
                            @Html.LabelFor(model => model.competencia, "Competencias", htmlAttributes: new { @class = "label" })
                            <div class="control">
                                @Html.TextAreaFor(model => model.competencia, new { @class = "textarea has-fixed-size" ,@rows=4})
                                @Html.ValidationMessageFor(model => model.competencia, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="field">
                            @Html.LabelFor(model => model.estrategia, "Estrategia", htmlAttributes: new { @class = "label" })
                            <div class="control">
                                @Html.TextAreaFor(model => model.estrategia, new { @class = "textarea has-fixed-size", @rows = 4 })
                                @Html.ValidationMessageFor(model => model.estrategia, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="field">
                            @Html.LabelFor(model => model.recursos, "Recursos", htmlAttributes: new { @class = "label" })
                            <div class="control">
                                @Html.TextAreaFor(model => model.recursos, new { @class = "textarea has-fixed-size", @rows = 4 })
                                @Html.ValidationMessageFor(model => model.recursos, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="field">
                            @Html.LabelFor(model => model.evaluacion, "Evaluación", htmlAttributes: new { @class = "label" })
                            <div class="control">
                                @Html.EditorFor(model => model.evaluacion, new { htmlAttributes = new { @class = "input" } })
                                @Html.ValidationMessageFor(model => model.evaluacion, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-default" />
                            </div>
                        </div>*@
                        <br />
                        <div class="columns">
                            <div class="column">
                                @Html.ActionLink("<- Volver a Materias", "Index", null, new { @class = "button is-info is-fullwidth" })
                            </div>
                            <div class="column">
                                <button value="Guardar Cambios" class="button is-success is-fullwidth">Guardar Cambios</button>
                            </div>
                        </div>
                    </div>
                }


            </div>
        </div>
    </section>
</div>
                

                @section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")
                }
